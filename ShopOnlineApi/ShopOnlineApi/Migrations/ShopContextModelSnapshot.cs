// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopOnlineApi.Data;

#nullable disable

namespace ShopOnlineApi.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Adress", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<int?>("HouseNumber")
                        .HasColumnType("integer")
                        .HasColumnName("house_number");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Street")
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.HasKey("UserId")
                        .HasName("adress_pkey");

                    b.ToTable("adress", "newshop");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            City = "Lublin",
                            Country = "Poland",
                            HouseNumber = 14,
                            Id = 1,
                            Street = "Puławska"
                        },
                        new
                        {
                            UserId = 2,
                            City = "Kraków",
                            Country = "Poland",
                            HouseNumber = 12,
                            Id = 2,
                            Street = "Zielona"
                        },
                        new
                        {
                            UserId = 3,
                            City = "Gdańsk",
                            Country = "Poland",
                            HouseNumber = 19,
                            Id = 3,
                            Street = "Lipowa"
                        },
                        new
                        {
                            UserId = 4,
                            City = "Gdynia",
                            Country = "Poland",
                            HouseNumber = 95,
                            Id = 4,
                            Street = "Sosnowa"
                        },
                        new
                        {
                            UserId = 5,
                            City = "Liverpool",
                            Country = "United Kingdom",
                            HouseNumber = 44,
                            Id = 5,
                            Street = "Sunny Street"
                        },
                        new
                        {
                            UserId = 6,
                            City = "Saloniki",
                            Country = "Greece",
                            HouseNumber = 66,
                            Id = 6,
                            Street = "Athens Street"
                        },
                        new
                        {
                            UserId = 7,
                            City = "Pirovac",
                            Country = "Croatia",
                            HouseNumber = 41,
                            Id = 7,
                            Street = "Biograd Street"
                        },
                        new
                        {
                            UserId = 8,
                            City = "Barcelona",
                            Country = "Spain",
                            HouseNumber = 59,
                            Id = 8,
                            Street = "Espanol Street"
                        },
                        new
                        {
                            UserId = 9,
                            City = "Rome",
                            Country = "Italy",
                            HouseNumber = 77,
                            Id = 9,
                            Street = "Blue Street"
                        },
                        new
                        {
                            UserId = 10,
                            City = "Prague",
                            Country = "Czech Republic",
                            HouseNumber = 94,
                            Id = 10,
                            Street = "Zatecky Street"
                        });
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("AddData")
                        .HasColumnType("date")
                        .HasColumnName("add_data");

                    b.Property<bool?>("Empty")
                        .HasColumnType("boolean")
                        .HasColumnName("empty");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("category", "newshop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddData = new DateOnly(2018, 9, 4),
                            Empty = false,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 2,
                            AddData = new DateOnly(2021, 10, 5),
                            Empty = false,
                            Name = "Newspappers"
                        },
                        new
                        {
                            Id = 3,
                            AddData = new DateOnly(2022, 8, 4),
                            Empty = false,
                            Name = "Audibooks"
                        },
                        new
                        {
                            Id = 4,
                            AddData = new DateOnly(2020, 7, 15),
                            Empty = false,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 5,
                            AddData = new DateOnly(2022, 12, 6),
                            Empty = true,
                            Name = "Cd's"
                        },
                        new
                        {
                            Id = 6,
                            AddData = new DateOnly(2020, 12, 30),
                            Empty = false,
                            Name = "Games"
                        },
                        new
                        {
                            Id = 7,
                            AddData = new DateOnly(2022, 10, 6),
                            Empty = true,
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Contact", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("EmailAdress")
                        .HasColumnType("text")
                        .HasColumnName("email_adress");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.HasKey("UserId")
                        .HasName("contact_pkey");

                    b.ToTable("contact", "newshop");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            EmailAdress = "robercik1234@xd.com",
                            Id = 1,
                            PhoneNumber = "+48 858 495 321"
                        },
                        new
                        {
                            UserId = 2,
                            EmailAdress = "pablo@xd.com",
                            Id = 2,
                            PhoneNumber = "+48 842 412 123"
                        },
                        new
                        {
                            UserId = 3,
                            EmailAdress = "natalka33@xp.com",
                            Id = 3,
                            PhoneNumber = "+48 555 491 978"
                        },
                        new
                        {
                            UserId = 4,
                            EmailAdress = "kasia_95@vista.com",
                            Id = 4,
                            PhoneNumber = "+48 123 412 777"
                        },
                        new
                        {
                            UserId = 5,
                            EmailAdress = "brad555@ad.com",
                            Id = 5,
                            PhoneNumber = "+55 495 455 890"
                        },
                        new
                        {
                            UserId = 6,
                            EmailAdress = "paula@cx.com",
                            Id = 6,
                            PhoneNumber = "+44 855 546 999"
                        },
                        new
                        {
                            UserId = 7,
                            EmailAdress = "kathrina@kp.com",
                            Id = 7,
                            PhoneNumber = "+32 859 123 001"
                        },
                        new
                        {
                            UserId = 8,
                            EmailAdress = "anna@qr.com",
                            Id = 8,
                            PhoneNumber = "+34 787 562 123"
                        },
                        new
                        {
                            UserId = 9,
                            EmailAdress = "peter_sql@gr.com",
                            Id = 9,
                            PhoneNumber = "+31 898 495 345"
                        },
                        new
                        {
                            UserId = 10,
                            EmailAdress = "milan_api@gd.com",
                            Id = 10,
                            PhoneNumber = "+22 838 495 312"
                        });
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("order_date");

                    b.Property<int?>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("orders", "newshop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateOnly(2022, 3, 4),
                            Price = 14,
                            ProductId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateOnly(2022, 4, 4),
                            Price = 111,
                            ProductId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderDate = new DateOnly(2022, 5, 6),
                            Price = 40,
                            ProductId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            OrderDate = new DateOnly(2022, 6, 6),
                            Price = 12,
                            ProductId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            OrderDate = new DateOnly(2022, 6, 30),
                            Price = 56,
                            ProductId = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            OrderDate = new DateOnly(2022, 7, 12),
                            Price = 12,
                            ProductId = 6,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            OrderDate = new DateOnly(2022, 7, 18),
                            Price = 44,
                            ProductId = 7,
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            OrderDate = new DateOnly(2022, 8, 31),
                            Price = 95,
                            ProductId = 8,
                            UserId = 10
                        },
                        new
                        {
                            Id = 9,
                            OrderDate = new DateOnly(2022, 9, 9),
                            Price = 12,
                            ProductId = 9,
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            OrderDate = new DateOnly(2022, 10, 11),
                            Price = 50,
                            ProductId = 10,
                            UserId = 4
                        },
                        new
                        {
                            Id = 11,
                            OrderDate = new DateOnly(2022, 10, 15),
                            Price = 70,
                            ProductId = 11,
                            UserId = 6
                        },
                        new
                        {
                            Id = 12,
                            OrderDate = new DateOnly(2022, 10, 30),
                            Price = 50,
                            ProductId = 10,
                            UserId = 9
                        },
                        new
                        {
                            Id = 13,
                            OrderDate = new DateOnly(2022, 11, 3),
                            Price = 95,
                            ProductId = 8,
                            UserId = 8
                        },
                        new
                        {
                            Id = 14,
                            OrderDate = new DateOnly(2022, 11, 10),
                            Price = 95,
                            ProductId = 8,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("product", "newshop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Harry Potter: Globet of Fire"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Dr.No"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Easy English"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "New York Times"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Automagazine"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Football"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Name = "Witcher I"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Name = "Golden Eye"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Name = "Monopoly"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Name = "Rebel"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            Name = "Uno"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            Name = "Vtech cars"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            Name = "Smily Play house"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            Name = "Doll house"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 6,
                            Name = "Need for speed: Most Wanted"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 6,
                            Name = "Fifa 21"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 5,
                            Name = "Doll house"
                        });
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateOnly?>("RegisterDate")
                        .HasColumnType("date")
                        .HasColumnName("register_date");

                    b.HasKey("Id");

                    b.ToTable("users", "newshop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Robert Lewandowski",
                            RegisterDate = new DateOnly(2022, 1, 6)
                        },
                        new
                        {
                            Id = 2,
                            Name = "Paweł Dawidowicz",
                            RegisterDate = new DateOnly(2022, 1, 31)
                        },
                        new
                        {
                            Id = 3,
                            Name = "Natalia Miłosz",
                            RegisterDate = new DateOnly(2022, 2, 5)
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kate Ramirez",
                            RegisterDate = new DateOnly(2022, 11, 4)
                        },
                        new
                        {
                            Id = 5,
                            Name = "Steve Gerrard",
                            RegisterDate = new DateOnly(2022, 5, 1)
                        },
                        new
                        {
                            Id = 6,
                            Name = "Tommy Varcetti",
                            RegisterDate = new DateOnly(2022, 5, 4)
                        },
                        new
                        {
                            Id = 7,
                            Name = "Niko Kovac",
                            RegisterDate = new DateOnly(2022, 4, 7)
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sergio Roberto",
                            RegisterDate = new DateOnly(2020, 7, 6)
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fernando Romani",
                            RegisterDate = new DateOnly(2021, 12, 6)
                        },
                        new
                        {
                            Id = 10,
                            Name = "Petr Czech",
                            RegisterDate = new DateOnly(2021, 12, 5)
                        });
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Adress", b =>
                {
                    b.HasOne("ShopOnlineApi.ModelsSQL.User", "User")
                        .WithOne("Adress")
                        .HasForeignKey("ShopOnlineApi.ModelsSQL.Adress", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("adress_user_id_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Contact", b =>
                {
                    b.HasOne("ShopOnlineApi.ModelsSQL.User", "User")
                        .WithOne("Contact")
                        .HasForeignKey("ShopOnlineApi.ModelsSQL.Contact", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contact_user_id_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Order", b =>
                {
                    b.HasOne("ShopOnlineApi.ModelsSQL.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("orders_product_id_fkey");

                    b.HasOne("ShopOnlineApi.ModelsSQL.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("orders_user_id_fkey");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Product", b =>
                {
                    b.HasOne("ShopOnlineApi.ModelsSQL.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("product_category_id_fkey");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopOnlineApi.ModelsSQL.User", b =>
                {
                    b.Navigation("Adress");

                    b.Navigation("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
